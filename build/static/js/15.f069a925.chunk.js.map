{"version":3,"sources":["app/components/LoadingProgress.js","app/partials/content/Socials/SocialTicket.js","app/pages/tutorials/components/tutorial-detail/RecentActivities.js","app/pages/tutorials/TutorialDetail.js"],"names":["LoadingProgress","props","className","SocialTicket","label","value","icon","color","classStyle","perfectScrollbarOptions","wheelSpeed","wheelPropagation","RecentActivities","getTutorialById","console","log","last_views","length","options","style","maxHeight","position","map","_view","moment","created_at","format","user","name","to","id","Avatar","width","height","src","avatar_url","title","alt","Author","author","description","Typography","gutterBottom","Button","variant","StepComponent","data","banner_image_url","content","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","aria-controls","component","ExpansionPanelDetails","TutorialDetail","dispatch","useDispatch","params","useParams","useSelector","store","tutorialList","isFetching","steps","comment_count","average_rate","React","useEffect","tutorialActions","tutorialId","align","Divider","_item","index","key","Chat","fontSize","Grade","Visibility"],"mappings":"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","file":"static/js/15.f069a925.chunk.js","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\nimport React from 'react';\n\nconst LoadingProgress = props => {\n    return (\n        <div className=\"my-progress-container\">\n          <CircularProgress />\n        </div>\n    );\n};\n\nLoadingProgress.propTypes = {\n    \n};\n\nexport default LoadingProgress;","import {\n    Card,\n    CardContent\n} from \"@material-ui/core\";\nimport React from \"react\";\n  \nconst SocialTicket = ({ label, value, icon, color, classStyle = \"\" }) => {\n    return (\n      <Card className={`bg-light-${color} card col col-lg-12 nopadding`}>\n        <CardContent className={\"card-content \" + classStyle}>\n          <div className={`col bg-light-${color} px-6 py-8 rounded-xl`}>\n            <span className={`d-block my-2 color-dark-${color}`}>{icon}</span>\n            <span className={`color-dark-${color} font-weight-bold font-size-h6 text-label`}>\n              {label}\n            </span>\n          </div>\n          <span className={`color-dark-${color} font-weight-bold text-value`}>\n            {value}\n          </span>\n        </CardContent>\n      </Card>\n    );\n  };\n  \n\nSocialTicket.propTypes = {\n    \n};\n\nexport default SocialTicket;","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst perfectScrollbarOptions = {\r\n  wheelSpeed: 2,\r\n  wheelPropagation: false,\r\n};\r\n\r\nexport default function RecentActivities({ getTutorialById }) {\r\n  console.log(\"RecentActivities\", getTutorialById);\r\n\r\n  const { last_views } = getTutorialById;\r\n  if (!last_views) return null;\r\n  return (\r\n    <>\r\n      {last_views.length && (\r\n        <div className=\"kt-portlet kt-portlet--height-fluid\">\r\n          <div className=\"kt-portlet__head\">\r\n            <div className=\"kt-portlet__head-label\">\r\n              <h3 className=\"kt-portlet__head-title\">Recent Views</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"kt-portlet__body\">\r\n            {/* style=\"max-height: 50vh;\" */}\r\n            <PerfectScrollbar\r\n              options={perfectScrollbarOptions}\r\n              style={{ maxHeight: \"50vh\", position: \"relative\" }}\r\n            >\r\n              <div className=\"kt-timeline-v2 ps ps--active-y\">\r\n                <div className=\"kt-timeline-v2__items kt-padding-top-25 kt-padding-bottom-30\">\r\n                  {last_views.map((_view) => {\r\n                    return (\r\n                      <div className=\"kt-timeline-v2__item\">\r\n                        <span className=\"kt-timeline-v2__item-time\">\r\n                          {moment(_view.created_at).format(\"Do MMM\")}\r\n                        </span>\r\n                        <div className=\"kt-timeline-v2__item-cricle\">\r\n                          <i className=\"fa fa-genderless kt-font-danger\" />\r\n                        </div>\r\n                        <div className=\"kt-timeline-v2__item-text kt-padding-top-5\">\r\n                          {`\"${_view.user.name}\"`} has viewed.\r\n                        </div>\r\n                        <div className=\"kt-list-pics kt-list-pics--sm kt-padding-l-20\">\r\n                          <Link to={`/users/${_view.user.id}`}>\r\n                            <Avatar\r\n                              style={{ width: \"30px\", height: \"30px\" }}\r\n                              src={_view.user.avatar_url}\r\n                              title=\"\"\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\n  Avatar, Button, Divider, ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography\n} from \"@material-ui/core\";\nimport { Chat, ExpandMore, Grade, Visibility } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport LoadingProgress from \"../../components/LoadingProgress\";\nimport SocialTicket from \"../../partials/content/Socials/SocialTicket\";\nimport tutorialActions from \"../../store/ducks/actions/tutorials\";\nimport RecentActivities from \"./components/tutorial-detail/RecentActivities\";\n\nconst Author = ({ author }) => {\n  const { id, name, avatar_url, description } = author || {};\n  return (\n    <Link to={`/users/${id}`} className=\"author\">\n      <div className=\"author-container--info\">\n        <div className=\"author-image\">\n          <Avatar src={avatar_url} />\n        </div>\n        <div className=\"author-info\">\n          <Typography gutterBottom={false} className=\"author-info--name\">\n            {name}\n          </Typography>\n          <Typography gutterBottom={false} className=\"author-info--desc\">\n            {description}\n          </Typography>\n        </div>\n      </div>\n      <div className=\"author-container--social\">\n        <Button to={`/users/${id}`} color=\"primary\" variant=\"outlined\">\n          Detail\n        </Button>\n      </div>\n    </Link>\n  );\n};\n\nconst StepComponent = ({ title, data }) => {\n  const { banner_image_url, content } = data;\n  return (\n    <>\n      <ExpansionPanel\n        className=\"tutorial-step\"\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMore />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          className=\"kt-expand__head-label\"\n        >\n          <Typography component=\"h4\" className=\"kt-expand__head-title\">\n            {title}\n          </Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className=\"tutorial-step-container--content\">\n          <div className=\"tutorial-step-image\">\n            <img src={banner_image_url} alt=\"illustration.\" />\n            <p></p>\n          </div>\n          <Typography>{content}</Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </>\n  );\n};\n\nconst TutorialDetail = (props) => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const { getTutorialById, isFetching } = useSelector(\n    (store) => store.tutorialList\n  );\n  const {\n    title,\n    description,\n    author,\n    steps,\n    comment_count,\n    average_rate,\n    last_views,\n  } = getTutorialById || {};\n\n  React.useEffect(() => {\n    dispatch(tutorialActions.getTutorialById(params.tutorialId));\n  }, [params, dispatch]);\n\n  return isFetching ? (\n    <LoadingProgress />\n  ) : (\n    <div>\n      <div className=\"contents\">\n        <div className=\"contents__box contents__box--right tutorial row\">\n          <div className=\"section col-md-12 col-lg-8\">\n            <div className=\"section-content kt-section\">\n              <h1 className=\"kt-section__title\"> {title}</h1>\n              <Typography\n                className=\"kt-section__desc\"\n                variant=\"body2\"\n                align=\"center\"\n                gutterBottom\n              >\n                {description}\n              </Typography>\n              <Divider />\n              <Author author={author} />\n              <Divider />\n              <div className=\"kt-section__content mt-3\">\n                {steps &&\n                  steps.map((_item, index) => (\n                    <StepComponent\n                      key={`panel-${index + 1}`}\n                      title={`Step ${index + 1}: ${_item.title}`}\n                      data={_item}\n                    />\n                  ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 col-lg-4\">\n            <div className=\"card-spacer mt-n25\">\n              <div className=\"row m-0 kt-hidden-mobile\">\n                <SocialTicket\n                  label=\"Comments\"\n                  value={comment_count}\n                  icon={<Chat fontSize=\"large\" />}\n                  color=\"primary\"\n                />\n                <SocialTicket\n                  label=\"Rating\"\n                  value={average_rate}\n                  icon={<Grade fontSize=\"large\" />}\n                  color=\"warning\"\n                />\n                <SocialTicket\n                  label=\"Views\"\n                  value={last_views && last_views.length}\n                  icon={<Visibility fontSize=\"large\" />}\n                  color=\"success\"\n                />\n              </div>\n              <div className=\"row m-0\">\n                <RecentActivities getTutorialById={getTutorialById} />\n              </div>\n            </div>\n            {/* --------------------------------- */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTutorialDetail.propTypes = {};\n\nexport default TutorialDetail;\n"],"sourceRoot":""}